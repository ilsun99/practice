// npm 
// node package manageer 
// nodejs가 제공하는 모듈: http 등 
// javascript가 제공하는 모듈: array, stiring 등
// 이런 기본적인 기능들을 결합하여 프로그램을 만드는 것 
// 타인의 모듈을 사용하는 방법을 배우기 위해 npm을 배울 것, node계의 앱스토어 
// 설치, 삭제, 업그레이드, 의존성 관리와 관련 
// 의존성 관리: 프로젝트에서 사용하는 다른 사람의 모듈에 프로젝트는 의존한다. 
// 이런 의존성에서 발생하는 복잡성을 낮춰준다. 

// npm을 이용하여 nodejs로 만들어진 소프트웨어 사용하기 
// pakage: 모듈과 독립적인 소프트웨어가 있다. 

// 1) 독립적인 소프트웨어 
// uglyfy-js -> g를 붙이면 글로벌 설치, 안붙이면 로컬로 설치 
// 글로벌은 이 컴퓨터 전역에서 사용되는 독립적인 소프트웨어로 간주 
// 로컬은 이 패키지를 설치하는 프로젝트 안에서 부품으로 사용 
// 소스코드를 일부러 못생기게 만든다. 

// 2) 모듈 
// underscorejs 
// 패키지를 가져오려는 디렉토리를 npm 아래에 두어야 한다. npm init 
// 괄호 안에 있는 것을 그대로 반영 
// 괄호 없는 것은 쓰라는 것 
// entrypoint는 어떠한 자바스크립트가 이 패키지를 구동시키는 것인지
// testcommand는 어떤 명령어를 실행하면 테스트할 것인지 
// git의 저장소에 올라가게 된다면 어디에 올라갈지
// pakage.json 파일이 생긴다. 
// 이렇게 init을 시켜놓으면 이 프로젝트를 npm에 공유할 수 있다. 
// extraeous: 아직 온전히 포함시키지 않은 상태 
// -> 플래그: --save를 입력하면 된다. 
// dependencies가 생김 
// -> 이게 있으면 json파일이 있다면 언제든지 underscroe 1.8.3을 포함할 수 있다. 
// 잘 이해되지 않으면 --save를 쓰면 된다. 
// 일시적으로 사용하는 것들은 dependencies를 설정하지 않는다. 
// 프로젝트와 항상 같이 있어야 하는 것이면 --save를 붙인다 
