//* 수업의 정상 

// 관계형 데이터베이스의 필요성 
// 중복되는 정보를 별도의 테이블로 만들어서 식별자로 구분할 수 있음 
// 식별자 테이블을 통해 동명이인 문제도 해결할 수 있음 

//* JOIN 
SELECT * FROM topic LEFT JOIN author ON topic.author_id = author.id;
// 두 테이블을 합치는 것 
SELECT topic.id, title, description, created, name, profile FROM topic LEFT JOIN author ON topic.author_id = author.id;
// 두 테이블 합치고 보고싶은 정보만 
mysql> SELECT topic.id AS topic_id, title, description, created, name, profile FROM topic LEFT JOIN
 ON topic.author_id = author.id;
 // 컬럼의 이름까지 바꾸는 것 

 // 인터넷과 데이터베이스의 관계 
 // 데이터베이스 클라이언트를 통해 데이터베이스 서버에 접속한다. 
 // MySQL에서는 monitor가 클라이언트이다. 

 // MySQL 클라이언트 
 // MySQL monitor는 명령어 기반 
 // MySQL workbench은 GUI 기반 

 // 데이터베이스 마무리 
 // index: 색인 기능을 사용하면 사용자들이 자주 사용하는 데이터를 정리할 수 있다. 
 // modeling: 데이터 베이스의 구조를 설계하는 것도 중요하다. 
 // backup: 데이터를 다른 곳에 저장 (mysql dump, binary log)
 // cloud: 큰 회사들이 운영하는 인프라 컴퓨터를 임대(AWS RDS,,,)
